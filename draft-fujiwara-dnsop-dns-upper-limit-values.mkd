---
title: Upper limit values for DNS
abbrev: dns-upper-limit-values
docname: draft-fujiwara-dnsop-dns-upper-limit-values-04

stand_alone: true

ipr: trust200902
area: operations
kw: Internet-Draft
cat: info
consensus: true
stream: IETF

pi:
  toc: yes
  tocdepth: 4
  sortrefs: yes
  symrefs: yes

author:
  -
    ins: K. Fujiwara
    name: Kazunori Fujiwara
    org: Japan Registry Services Co., Ltd.
    abbrev: JPRS
    email: fujiwara@wide.ad.jp
    country: Japan

normative:

informative:
  Tsuname2021:
    title: "TsuNAME: exploiting misconfiguration and vulnerability to DDoS DNS"
    author:
      -
        ins: Giovane C. M. Moura
        name: Giovane C. M. Moura
        org: SIDN Labs
      -
        ins: Sebastian Castro
        name: Sebastian Castro
        org: InternetNZ
      -
        ins: John S. Heidemann
        name: John S. Heidemann
        org: USC/ISI
      -
        ins: Wes Hardaker
        name: Wes Hardaker
        org: USC/ISI
    date: 2021
    seriesinfo: "IMC '21: Proceedings of the 21st ACM Internet Measurement Conference"

  KeyTrap:
    title: "The KeyTrap Denial-of-Service Algorithmic Complexity Attacks on DNS"
    author:
      -
        ins: Elias Heftrig
        name: Elias Heftrig
        org: ATHENE
      -
        ins: Haya Schulmann
        name: Haya Schulmann
        org: ATHENE
      -
        ins: Niklas Vogel
        name: Niklas Vogel
        org:  TU Darmstadt
      -
        ins:  Michael Waidner
        name:  Michael Waidner
        org:  Fraunhofer SIT
    date: 2024

  Mockapetris1988:
    title: "Development of the domain name system"
    author:
     -
       ins: Paul V. Mockapetris
       name: Paul V. Mockapetris
       org: USC/ISI
     -
       ins: Kevin J. Dunlap
       name: Kevin J. Dunlap
       org: Digital Equipment Corp.
    date: August 1988
    seriesinfo: "the Proceedings of SIGCOMM 1988"

  djbdns:
    title: "djbdns: Notes on the Domain Name System"
    target: "https://cr.yp.to/djbdns/notes.html"
    author:
     -
       ins: D. J. Bernstein
       name: Daniel Julius Bernstein
       org: University of ILLINOIS CHICAGO

--- abstract

DNS was designed to have as few hard upper limits
as possible to allow for future extensibility.
However, the lack of a clear upper limit leads to vulnerabilities,
and several attack methods have been reported.
This document collects upper limit values implemented by DNS softwares
to avoid vulnerabilities.

--- middle

Introduction {#introduction}
=====

DNS was designed to have as few upper limits
as possible to allow for future extensibility
described in 
the paper "Development of the Domain Name System" {{Mockapetris1988}}.

If a protocol is implemented without considering the upper limit,
it may become vulnerable to DoS attacks.

There are parameters in the DNS protocol that do not have clear upper limits.
For example, the number of alias levels using CNAME Resource records
and the number of resource records in an RRSet.

This document collects upper limit values implemented by DNS software
to avoid vulnerabilities.

This document is intended to serve as a basis for discussions
that will lead to the creation of a future Best Current Practice document.

Terminology {#terminology}
=========

{::boilerplate bcp14-tagged}
The specialized terms used in this document are defined in
DNS Terminology {{!RFC9499}}.

Glueless delegation (Gluelessness) is the term used to describe
delegation without glue.

Implemented upper limits
==========

Packet size
------

There were comments that there are size limitations
even if no precise upper limits are set.

The DNS packet format has an upper limit of 65535 octets,
so an RRset cannot exceed that size.
Also, the upper limit size of a single resource record is 65535 octets
minus the DNS header size because RDLENGTH is 16 bits.

Section 4.2.1 UDP usage of {{!RFC1035}} limits the UDP message size to 512.

The size of a DNS response that can be sent using unfragmented UDP is
about 1400 octets. {{?RFC9715}}

DNS Response Rate Limiting
--------

{{!RFC5358}} describes DNS Reflector Attacks and how to prevent
the use of default configured recursive nameservers.
Simply preparing a large RRSet can increase the amplification factor
of DNS Reflector Attacks.
Countermeasures for recursive resolvers were described in {{RFC5358}},
however, countermeasures for authoritative servers have not been standardized
as an RFC and are implemented in various software as DNS Response Rate Limiting.

Number of alias levels using CNAME/DNAME
-------

CNAME aliases are widely used; however,
when there are multiple levels of CNAME aliases,
full-service resolvers have to redo the name resolution,
which increases the load.
And more,
each stub resolver that receives a response containing multiple CNAME aliases
must find the final A, AAAA Resource record
that corresponds to the CNAME in each application.

Unbound and BIND 9 introduced 'max-query-restarts' parameter,
and the default is 11.
(Hard limit on the number of times
Unbound is allowed to restart a query upon encountering a CNAME record.)


Number of Resource Records in a RRSet
-------

Currently, many web services that use domain names require that
a TXT record containing a token of their choosing be placed
at the zone apex to verify the registrant domain name.
A large enterprise set 74 TXT records at its zone apex.

CVE-2024-1737, "BIND's database will be slow if a very large number of RRs
exist at the same name" was reported, and BIND 9.18.28 implemented the limit.
BIND 9 introduced 'max-records-per-type' parameter
that limits the number of resource records in an RRSet, and the default is 100.

Number of NS records in a delegation
--------

Although we could not find a clear explanation,
the upper limit value of the number of name server names
that can be registered for gTLDs and ccTLDs is 13.

Number of RRSIGs/DNSKEYs/DSs in a RRSet
-------

[KeyTrap] is a vulnerability caused by the fact that
there is no upper limit on the number of
DNSKEY, DS, or RRSIG resource records.
Unbound introduced the maximum number of RRSIG validations for an
RRset (MAX_VALIDATE_RRSIGS) as 8, and the maximum allowed digest
match failures per DS, for DNSKEYs with the same properties
(MAX_DS_MATCH_FAILURES) as 4.

Number of delegation levels of glueless delegations
-------

Unrelated (or, rarely sibling) name server names are used/required for
DNS hosting services.

{{!RFC9471}} states that all in-domain glue records are attached to
the delegation response.
Therefore, using in-domain name server names for DNS delegation
minimizes name resolution costs.

For some domain names, there are multiple layers of dependence
on unrelated name server names when resolving the name.
If information on unrelated name server names is not in the cache,
the recursive resolver must perform A/AAAA name resolution
for the unrelated name server names.
Frequent use of unrelated name server names can cause unstable name resolution.

Furthermore, there are cases where cyclic dependencies in delegation occur,
settings that depend on sibling glue,
and cases where the sibling glue disappears or
some name servers stop responding, making it impossible to resolve names.

{{Tsuname2021}} pointed out attacks and countermeasures that
use increased load due to cyclic dependencies.
Many cyclic delegations are likely due to misconfigurations.

{{djbdns}} allows three levels of gluelessness.

Discussions on future upper limits
=====

Evaluation is necessary before setting common upper limit values.
Implementing possible upper limits as configurable parameters
that operators can control is useful.

If we set upper limits on authoritative servers in the future,
errors should be detected on the primary servers.
Secondary servers should not detect errors
because they only receive zone transfers.

IANA Considerations {#iana}
====================
{:#iana}
This document requests no IANA actions.

Security Considerations {#security}
=====
{:#securitycons}

--- back
